/* eslint-env node */

module.exports = {
  root: true,
  env: {
    browser: true,
    es2020: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:react-hooks/recommended',
    'plugin:prettier/recommended',
    'eslint-config-prettier',
    'prettier',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: true,
    tsconfigRootDir: __dirname,
  },
  plugins: [
    'react-refresh',
    'prettier',
    'simple-import-sort',
    'unused-imports',
    'import',
  ],
  rules: {
    '@typescript-eslint/no-unsafe-call': 'error',
    '@typescript-eslint/no-unsafe-argument': 'error',
    '@typescript-eslint/restrict-template-expressions': 'error',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/restrict-plus-operands': 'error',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/consistent-type-definitions': 'error',
    '@typescript-eslint/no-unsafe-assignment': 'error',
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
    '@typescript-eslint/no-unnecessary-type-constraint': 'error',

    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-argument': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-non-null-asserted-optional-chain': 'off',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/restrict-plus-operands': 'off',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/restrict-plus-operands': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-misused-promises': 'off',
    "plugin:@typescript-eslint/recommended-type-checked" : "off",
    "@typescript-eslint/no-redundant-type-constituents": "off",

    'no-prototype-builtins': 'off',
    'no-useless-escape': 'off',
    'no-unsafe-optional-chaining': 'off',
    'no-case-declarations': 'off',
    'unused-imports/no-unused-imports': 'error',
    'react-refresh/only-export-components': 'off',
    'no-empty-pattern': 'off',
    'react-hooks/exhaustive-deps': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-var-requires': 'off',

    'react/react-in-jsx-scope': 'off',
    'react/display-name': 'off',

    'linebreak-style': ['error', 'unix'],
    'react-hooks/rules-of-hooks': 'off',

    '@typescript-eslint/no-unused-vars': [
      'error',
      { argsIgnorePattern: '^__', varsIgnorePattern: '^__' },
    ],

    'simple-import-sort/imports': [
      'error',
      {
        groups: [
          ['^react$', '^react-native$'],
          ['^@?\\w'],
          ['^\\u0000'],
          ['^src/components'],
          ['^src/hooks'],
          ['^src/constants'],
          ['^src/services'],
          ['^src/helpers'],
          ['^src/json'],
          ['^src/models'],
          ['^src/navigation'],
          ['^src/redux'],
          ['^src/screens'],
          ['^src/types'],
          ['^src/utils'],
          ['^src/configs'],
          ['^src/assets'],
          ['components'],
          ['./components'],
          ['App'],
          ['^src/themes'],
          ['^.+\\.?(src/themes)$'],
          ["^\\.\\./", "^\\./"],
          ["^.+\\.?(type|types)$"],
          ["^.+\\.?(styles)$", "^.+\\.?(src/themes)$", "^./styles$"]
        ],
      },
    ],

    'import/newline-after-import': ['error', { count: 1 }],

    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: 'function' },
      { blankLine: 'always', prev: 'function', next: '*' },
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'always', prev: 'const', next: '*' },
      { blankLine: 'always', prev: 'let', next: '*' },
      { blankLine: 'always', prev: 'var', next: '*' },
      { blankLine: 'always', prev: 'block-like', next: '*' },
    ],

    'prettier/prettier': [
      'warn',
      {
        arrowParens: 'always',
        bracketSameLine: false,
        bracketSpacing: true,
        semi: true,
        singleQuote: true,
        jsxSingleQuote: false,
        quoteProps: 'as-needed',
        trailingComma: 'all',
        singleAttributePerLine: false,
        htmlWhitespaceSensitivity: 'css',
        vueIndentScriptAndStyle: false,
        proseWrap: 'preserve',
        insertPragma: false,
        requirePragma: false,
        tabWidth: 2,
        useTabs: false,
        embeddedLanguageFormatting: 'auto',
        printWidth: 80,
        endOfLine: 'lf',
      },
    ],
  },
  ignorePatterns: ['.eslintrc.cjs', 'vite.config.ts'],
};
